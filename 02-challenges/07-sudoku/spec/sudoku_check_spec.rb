# frozen_string_literal: true

require 'sudoku_check'

describe 'sudoku_check' do
  let(:sudoku_c) {
    [[[8, 3, 5], [4, 1, 6], [9, 2, 7]],
     [[2, 9, 6], [8, 5, 7], [4, 3, 1]],
     [[4, 1, 7], [2, 9, 3], [6, 5, 8]],
     [[5, 6, 9], [1, 3, 4], [7, 8, 2]],
     [[1, 2, 3], [6, 7, 8], [5, 4, 9]],
     [[7, 4, 8], [5, 2, 9], [1, 6, 3]],
     [[6, 5, 2], [7, 8, 1], [3, 9, 4]],
     [[9, 8, 1], [3, 4, 5], [2, 7, 6]],
     [[3, 7, 4], [9, 6, 2], [8, 1, 5]]]
  }

  let(:sudoku_f) {
    [[[1, 2, 3], [4, 5, 6], [7, 8, 9]],
     [[1, 2, 3], [4, 5, 6], [7, 8, 9]],
     [[1, 2, 3], [4, 5, 6], [7, 8, 9]],
     [[1, 2, 3], [4, 5, 6], [7, 8, 9]],
     [[1, 2, 3], [4, 5, 6], [7, 8, 9]],
     [[1, 2, 3], [4, 5, 6], [7, 8, 9]],
     [[1, 2, 3], [4, 5, 6], [7, 8, 9]],
     [[1, 2, 3], [4, 5, 6], [7, 8, 9]],
     [[1, 2, 3], [4, 5, 6], [7, 8, 9]]]
  }

  it 'should return boolean' do
    expect(check_sudoku(sudoku_c)).to eq(true)
    expect(check_sudoku(sudoku_f)).to eq(false)
  end
end
